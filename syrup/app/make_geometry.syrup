from wafflecore.compute import (new_id, vertices_cube, cuboid_new, copy_vertices_color, vertices_scaled, copy_vertices_offset)
from wafflecore.standard import array_in_string
from test import test_eyes

(object geometry) column_geometry_color(number x_length, number z_length, array offset, array byte_color):
    geometry = []
    for i in range(x_length):
        for j in range(z_length):
            position = [i+offset[0], offset[1], j + offset[2]]
            vertices = vertices_cube(position, 1, byte_color, 0.05)
            extend(geometry, vertices)

() column_geometry_color_extend(number x_length, number z_length, array offset, array byte_color, array geometry):
    extend(geometry, column_geometry_color(x_length, z_length, offset, byte_color))

(object geometry) column_geometry(number x_length, number z_length, array offset):
    geometry = column_geometry_color(x_length, z_length, offset, [38, 38, 217, 255])

() column(number x_length, number z_length):
    geometry = column_geometry(x_length, z_length, [0.0, 0.0, 0.0])
    name = join(["blue", integer_string(x_length), "by", integer_string(z_length)], "")
    filename = join(["../geometries", name], "/")
    file_write(filename, to_json(geometry))

() rectangle(number x_length, number z_length):
    geometry = []
    byte_color = [38, 38, 217, 255]
    z_s = [0.0, z_length - 1]
    x_s = [0.0, x_length - 1]
    for i in range(2):
        z = z_s[i]
        x = x_s[i]
        vertices = column_geometry(x_length - 4, 1, [2,0,z])
        extend(geometry, vertices)
        vertices = column_geometry(1, z_length - 4, [x,0,2])
        extend(geometry, vertices)

    cubes = [[1.0, 0.0, 1.0],[1.0, 0.0, z_length - 2], [x_length - 2, 0.0, 1.0],[x_length - 2, 0.0, z_length - 2]]

    for cube in cubes:
        vertices = vertices_cube(cube, 1, byte_color, 0.05)
        extend(geometry, vertices)

    name = join(["blue", integer_string(x_length), "by", integer_string(z_length)], "")
    filename = join(["../geometries", name], "/")
    file_write(filename, to_json(geometry))

() c_shape(number up_length, number side_length, number down_length):
    byte_color = [38, 38, 217, 255]
    geometry = []
    column = column_geometry(down_length, 1, [2,0,0])
    extend(geometry, column)
    column = column_geometry(1, side_length, [0,0,2])
    extend(geometry, column)
    column = column_geometry(up_length, 1, [2,0,3 + side_length])
    extend(geometry, column)

    vertices = vertices_cube([1,0,1], 1, byte_color, 0.05)
    extend(geometry, vertices)
    vertices = vertices_cube([1,0,2+side_length], 1, byte_color, 0.05)
    extend(geometry, vertices)

    filename = join(["../geometries", "blue_c_se"], "/")
    file_write(filename, to_json(geometry))

() t_very_long():
    byte_color = [38, 38, 217, 255]
    geometry = []
    # long ones
    column = column_geometry(68, 1, [2,0,0])
    extend(geometry, column)
    column = column_geometry(21, 1, [2,0,7])
    extend(geometry, column)
    column = column_geometry(37, 1, [33,0,7])
    extend(geometry, column)
    # sides
    column = column_geometry(1, 4, [0,0,2])
    extend(geometry, column)
    column = column_geometry(1, 4, [71,0,2])
    extend(geometry, column)
    # cubes
    column = column_geometry(1, 1, [1,0,1])
    extend(geometry, column)
    column = column_geometry(1, 1, [70,0,1])
    extend(geometry, column)
    column = column_geometry(1, 1, [70,0,6])
    extend(geometry, column)
    column = column_geometry(1, 1, [1,0,6])
    extend(geometry, column)

    filename = join(["../geometries", "t_68"], "/")
    file_write(filename, to_json(geometry))

() cubes():
    byte_color = [38, 38, 217, 255]
    geometry = []
    positions = [
        [10.0, 0.0, 0.0]
    ]
    for position in positions:
        vertices = vertices_cube(position, 1, byte_color, 0.05)
        extend(geometry, vertices)

    filename = join(["../geometries", "stage_cubes"], "/")
    file_write(filename, to_json(geometry))


() jail():
    geometry = []
    column = column_geometry(56, 1, [0,0,0])
    extend(geometry, column)
    column = column_geometry(1, 30, [0,0,1])
    extend(geometry, column)
    column = column_geometry(20, 1, [0,0,31])
    extend(geometry, column)
    column = column_geometry(1, 2, [19,0,29])
    extend(geometry, column)
    column = column_geometry(17, 1, [3,0,28])
    extend(geometry, column)
    column = column_geometry(1, 24, [3,0,4])
    extend(geometry, column)
    column = column_geometry(50, 1, [3,0,3])
    extend(geometry, column)
    column = column_geometry(1, 24, [52,0,4])
    extend(geometry, column)
    column = column_geometry(17, 1, [36,0,28])
    extend(geometry, column)
    column = column_geometry(1, 2, [36,0,29])
    extend(geometry, column)
    column = column_geometry(20, 1, [36,0,31])
    extend(geometry, column)
    column = column_geometry(1, 30, [55,0,1])
    extend(geometry, column)

    gateway = column_geometry_color(16,2, [20, 0, 29], [236, 183, 210, 255])
    extend(geometry, gateway)
    filename = join(["../geometries", "jail"], "/")
    file_write(filename, to_json(geometry))

(bool yes) keep_color(number r, number g, number b):
    if (r > 0.86 && r < 0.87) && (g > 0.86 && g < 0.87) && (b > 0.86 && b < 0.87):
        yes = true
        return
    if (r > 0.14 && r < 0.15) && (g > 0.14 && g < 0.15) && (b > 0.85 && b < 0.86):
        yes = true
        return


(array new_vertices) shadow_copy(array vertices, array byte_color):
    new_vertices = []
    color = []
    for digit in byte_color:
        append(color, digit/255.0)
    for vertex in vertices:
        if keep_color(vertex[6], vertex[7], vertex[8]):
            new_vertex = [vertex[0], vertex[1], vertex[2], vertex[3], vertex[4], vertex[5], vertex[6], vertex[7], vertex[8], vertex[9]]
        else:
            new_vertex = [vertex[0], vertex[1], vertex[2], vertex[3], vertex[4], vertex[5], color[0], color[1], color[2], color[3]]
        append(new_vertices, new_vertex)

() enemy_copy():
    names = ["head_eyes_down", "head_eyes_left", "head_eyes_right", "head_eyes_up", "legs_0", "legs_1"]
    # 217, 29, 5
    colors = [ [[217, 29, 5, 255], "shadow" ], [[147, 254, 222, 255], "bashful"], [[236,183,219, 255], "speedy"], [[236, 182, 81, 255], "pokey"]]
    dir = "../geometries"
    for name in names:
        filepath = join([dir, name], "/")
        if file_is_file(filepath):
            text = null
            file_read(filepath, text)
            vertices = from_json(text)
            for color in colors:
                byte_color = color[0]
                character = color[1]
                new_vertices = shadow_copy(vertices, byte_color)
                new_name = join([character, name], "_")
                filename = join(["../geometries", new_name], "/")
                file_write(filename, to_json(new_vertices))

(array new_vertices) ghost_geometry_copy(array vertices):
    white = [1.0, 1.0, 1.0, 1.0]
    red= [217/255.0, 29/255.0, 5/255.0, 1.0]
    new_vertices = []
    blue = 200/255.0
    for vertex in vertices:
        if vertex[8] > blue:
            new_vertex = [vertex[0], vertex[1], vertex[2], vertex[3], vertex[4], vertex[5], white[0], white[1], white[2], white[3]]
        else:
            new_vertex = [vertex[0], vertex[1], vertex[2], vertex[3], vertex[4], vertex[5], red[0], red[1], red[2], red[3]]
        append(new_vertices, new_vertex)

() ghost_copy():
    dir = "../geometries"
    names = ["ghost_head", "ghost_legs_0", "ghost_legs_1"]
    for name in names:
        filepath = join([dir, name], "/")
        if file_is_file(filepath):
            text = null
            file_read(filepath, text)
            vertices = from_json(text)
            new_vertices = ghost_geometry_copy(vertices)
            new_name = join(["white", name], "_")
            filename = join(["../geometries", new_name], "/")
            file_write(filename, to_json(new_vertices))

() change_filename():
    dirs = ["../things", "../animations", "../geometries"]
    for dir in dirs:
        names = file_list_dir(dir)
        for name in names:
            filepath = join([dir, name], "/")
            if file_is_file(filepath) && is_extension(name, "json") == false:
                text = null
                file_read(filepath, text)
                new_name = join([name, "json"], ".")
                filename = join([dir, new_name], "/")
                file_write(filename, text)

() make_outside(string name, array byte_color):
    geometry = []
    # upper half
    column_geometry_color_extend(40, 1, [0,0,159], byte_color, geometry)
    column_geometry_color_extend(1, 24, [40,0,160], byte_color, geometry)
    column_geometry_color_extend(36, 1, [4,0,184], byte_color, geometry)
    column_geometry_color_extend(2, 1, [2,0,185], byte_color, geometry)
    column_geometry_color_extend(1, 2, [1,0,186], byte_color, geometry)
    column_geometry_color_extend(1, 72, [1,0,188], byte_color, geometry)
    column_geometry_color_extend(1, 2, [1,0,260], byte_color, geometry)
    column_geometry_color_extend(2, 1, [2,0,262], byte_color, geometry)
    column_geometry_color_extend(216, 1, [4,0,263], byte_color, geometry)
    column_geometry_color_extend(2, 1, [220,0,262], byte_color, geometry)
    column_geometry_color_extend(1, 2, [222,0,260], byte_color, geometry)
    column_geometry_color_extend(1, 72, [223,0,188], byte_color, geometry)
    column_geometry_color_extend(1, 2, [222,0,186], byte_color, geometry)
    column_geometry_color_extend(2, 1, [220,0,185], byte_color, geometry)
    column_geometry_color_extend(36, 1, [184,0,184], byte_color, geometry)
    column_geometry_color_extend(1, 24, [183,0,160], byte_color, geometry)
    column_geometry_color_extend(40, 1, [184,0,159], byte_color, geometry)

    # bottom half
    column_geometry_color_extend(40, 1, [0,0,136], byte_color, geometry)
    column_geometry_color_extend(1, 24, [40,0,112], byte_color, geometry)
    column_geometry_color_extend(36, 1, [4,0,111], byte_color, geometry)
    column_geometry_color_extend(2, 1, [2,0,110], byte_color, geometry)
    column_geometry_color_extend(1, 2, [1,0,108], byte_color, geometry)
    column_geometry_color_extend(1, 88, [1,0,20], byte_color, geometry)
    column_geometry_color_extend(1, 2, [1,0,18], byte_color, geometry)
    column_geometry_color_extend(2, 1, [2,0,17], byte_color, geometry)
    column_geometry_color_extend(216, 1, [4,0,16], byte_color, geometry)
    column_geometry_color_extend(2, 1, [220,0,17], byte_color, geometry)
    column_geometry_color_extend(1, 2, [222,0,18], byte_color, geometry)
    column_geometry_color_extend(1, 88, [223,0,20], byte_color, geometry)
    column_geometry_color_extend(1, 2, [222,0,108], byte_color, geometry)
    column_geometry_color_extend(2, 1, [220,0,110], byte_color, geometry)
    column_geometry_color_extend(36, 1, [184,0,111], byte_color, geometry)
    column_geometry_color_extend(1, 24, [183,0,112], byte_color, geometry)
    column_geometry_color_extend(40, 1, [184,0,136], byte_color, geometry)

    # squares missing inside
    squares = [
    [4, 188],
    [4, 259],
    [107, 259],
    [109, 229],
    [114, 229],
    [116, 259],
    [219, 259],
    [219, 188],
    [4, 107],
    [4, 68],
    [18, 66],
    [18, 61],
    [4, 59],
    [4, 20],
    [219, 20],
    [219, 59],
    [205, 61],
    [205, 66],
    [219, 68],
    [219, 107]
    ]

    for square in squares:
        column_geometry_color_extend(1,1, [square[0], 0, square[1]], byte_color, geometry)

    filename = join([name, "json"], ".")
    filename = join(["../geometries", filename], "/")
    file_write(filename, to_json(geometry))

() make_white_stage(string name):
    dir = "../things"
    filename = join([name, "json"], ".")
    filepath = join([dir, filename], "/")
    file_read(filepath, text)
    thing = from_json(text)
    if array_in_string(keys(thing), "children_names"):
        new_children_names = []
        for child_name in thing.children_names:
            make_white_stage(child_name)
            new_name = join(["white", child_name], "_")
            append(new_children_names, new_name)
        thing.children_names = new_children_names
    if array_in_string(keys(thing), "geometry_name"):
        geometry_name = thing.geometry_name
        filename = join([geometry_name, "json"], ".")
        filepath = join(["../geometries", filename], "/")
        file_read(filepath, text)
        geometry = from_json(text)
        new_geometry = copy_vertices_color(geometry, [255,255,255,255])
        new_text = to_json(new_geometry)
        new_name = join(["white", geometry_name], "_")
        filename = join([new_name, "json"], ".")
        filepath = join(["../geometries", filename], "/")
        file_write(filepath, new_text)
        thing.geometry_name = new_name
    new_name = join(["white", name], "_")
    thing.name = new_name
    filename = join([new_name, "json"], ".")
    new_type = join(["White", thing.type], "")
    thing.type = new_type
    filepath = join([dir, filename], "/")
    text = to_json(thing)
    file_write(filepath, text)

() set_thing_geometry_name():
    dir = "../things"
    names = file_list_dir(dir)
    for name in names:
        filepath = join([dir, name], "/")
        if file_is_file(filepath) && is_extension(name, "json"):
            file_read(filepath, text)
            print(["reading file", name])
            thing = from_json(text)
            if array_in_string(keys(thing), "geometry_names"):
                thing.geometry_name = thing.geometry_names[0]
            text = to_json(thing)
            file_write(filepath, text)

() dot_geometry():
    byte_color = [236, 183, 152, 255]
    vertices = column_geometry_color(1, 1, [0,0,0], byte_color)
    filename = join(["../geometries", "dot.json"], "/")
    file_write(filename, to_json(vertices))

() color_pink_number():
    filepath = "../geometries/pink_100.json"
    text = ""
    file_read(filepath, text)
    vertices = from_json(text)
    new_vertices = copy_vertices_color(vertices,[236, 183, 219, 255])
    file_write(filepath,text)

() make_large_pacman():
    ["pacman_0", "pacman_1", "pacman_2"]
    # 3x bigger
    for num in range(3):
        filename = join(["pacman", integer_string(num)], "_")
        filename = join([filename, "json"], ".")
        filepath = join(["../geometries", filename], "/")
        text = ""
        file_read(filepath, text)
        geometry = from_json(text)
        new_geometry = vertices_scaled(geometry, 4)
        filename = join(["pacman_big", integer_string(num)], "_")
        filename = join([filename, "json"], ".")
        filepath = join(["../geometries", filename], "/")
        file_write(filepath, to_json(new_geometry))

() geometry_offset(string name, array position):
    filename = join([name, "json"], ".")
    filepath = join(["../geometries", filename], "/")
    text = ""
    file_read(filepath, text)
    vertices = from_json(text)
    copy = copy_vertices_offset(vertices, position)
    file_write(filepath, to_json(copy))

() test():
    test_eyes()

() run():
    #geometry_offset("pacman_die_5", [4,0,0])
    #c_shape(42, 28, 37)
    #column(214,1)
    #rectangle(8,32)
    #t_very_long()
    #jail()
    #enemy_copy()
    #ghost_copy()
    #change_filename()
    #make_white_stage("stage")
    #make_large_pacman()
    geometry_offset("pacman_die_5", [-4,0,0])
    #set_thing_geometry_name()
    #dot_geometry()
    #color_pink_number()
    #cubes()
    #make_outside("outside_blue", [38, 38, 217, 255])
    #make_outside("outside_white", [255, 255, 255, 255])
    #test_eyes()
