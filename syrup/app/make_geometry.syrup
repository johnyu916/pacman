from wafflecore.compute import (new_id, vertices_cube, cuboid_new)

(object geometry) column_geometry(number x_length, number z_length, array offset):
    geometry = []
    byte_color = [38, 38, 217, 255]
    for i in range(x_length):
        for j in range(z_length):
            position = [i+offset[0], offset[1], j + offset[2]]
            vertices = vertices_cube(position, 1, byte_color, 0.05)
            extend(geometry, vertices)

() column(number x_length, number z_length):
    geometry = column_geometry(x_length, z_length, [0.0, 0.0, 0.0])
    name = join(["blue", integer_string(x_length), "by", integer_string(z_length)], "")
    filename = join(["../geometries", name], "/")
    file_write(filename, to_json(geometry))

() rectangle(number x_length, number z_length):
    geometry = []
    byte_color = [38, 38, 217, 255]
    z_s = [0.0, z_length-1]
    x_s = [0.0, x_length-1]
    for i in range(2):
        z = z_s[i]
        x = x_s[i]
        for j in range(2, x_length - 2):
            position = [i, 0.0, z]
            vertices = vertices_cube(position, 1, byte_color, 0.05)
            extend(geometry, vertices)
        for j in range(2, z_length - 2):
            position = [x, 0.0, i]
            vertices = vertices_cube(position, 1, byte_color, 0.05)
            extend(geometry, vertices)

    cubes = [[1.0, 0.0, 1.0],[1.0, 0.0, z_length-2], [x_length-2, 0.0, 1.0],[x_length-2, 0.0, z_length-2]]

    name = join(["blue", integer_string(x_length), "by", integer_string(z_length)], "")
    filename = join(["../geometries", name], "/")
    file_write(filename, to_json(geometry))

() c_shape(number up_length, number side_length, number down_length):
    byte_color = [38, 38, 217, 255]
    geometry = []
    column = column_geometry(down_length, 1, [2,0,0])
    append(geometry, column)
    column = column_geometry(1, side_length, [0,0,2])
    append(geometry, column)
    column = column_geometry(up_length, 1, [2,0,3 + side_length])
    append(geometry, column)

    vertices = vertices_cube([1,0,1], 1, byte_color, 0.05)
    append(geometry, vertices)
    vertices = vertices_cube([1,0,2+side_length], 1, byte_color, 0.05)
    append(geometry, vertices)

    filename = join(["../geometries", "blue_c_ne"], "/")
    file_write(filename, to_json(geometry))

() t_very_long():
    byte_color = [38, 38, 217, 255]
    geometry = []
    # long ones
    column = column_geometry(68, 1, [2,0,0])
    append(geometry, column)
    column = column_geometry(21, 1, [2,0,7])
    append(geometry, column)
    column = column_geometry(37, 1, [33,0,7])
    append(geometry, column)
    # sides
    column = column_geometry(1, 4, [0,0,2])
    append(geometry, column)
    column = column_geometry(1, 4, [71,0,2])
    append(geometry, column)
    # cubes
    column = column_geometry(1, 1, [1,0,1])
    append(geometry, column)
    column = column_geometry(1, 1, [70,0,1])
    append(geometry, column)
    column = column_geometry(1, 4, [70,0,6])
    append(geometry, column)
    column = column_geometry(1, 4, [1,0,6])
    append(geometry, column)

    filename = join(["../geometries", "t_68"], "/")
    file_write(filename, to_json(geometry))

() cubes():
    geometry = []
    positions = [
    ]
    for position in positions:
        vertices = vertices_cube(position, 1, byte_color, 0.05)
        extend(geometry, vertices)

    filename = join(["../geometries", "stage_cubes"], "/")
    file_write(filename, to_json(geometry))

() run():
    #c_shape(37, 28, 42)
    #column(214,1)
    #rectangle(8,32)
    t_very_long()
