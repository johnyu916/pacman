from intro import intro
from game_state import (main_menu, player_ready, ready, playing, dying, game_over, won, victory_dance)
from ai import ai_idle
from view import view_new_exec_wait

# root process
() root(object state, object view):
    if view.step == 0:
        # 1. intro
        view.step = 1
        print("go to intro")
        view_new_exec_wait(state, view, "intro")
    elif view.step == 1:
        view.step = 2
        view_new_exec_wait(state, view, "main_menu")
    elif view.step == 2:
        view.step = 3
        view_new_exec_wait(state, view, "player_ready")
    elif view.step == 3:
        view_new_exec_wait(state, view, "ready")
        view.step = 4
    elif view.step == 4:
        view.step = 5
        view.playing = view_new_exec_wait(state, view, "playing")
    elif view.step == 5:
        result = view.playing.result
        if result.next  == "won":
            view.won = view_new_exec_wait(state, view, "won")
            view.step = 6
        elif result.next  == "dying":
            view.dying = view_new_exec_wait(state, view, "dying")
            view.step = 7
    elif view.step == 6:
        # done winning?
        view_new_exec_wait(state, view, "victory_dance")
        # go to main menu
        view.step = 1
    elif view.step == 7:
        # done dying
        result = view.dying.result
        if result.next == "ready":
            view_new_exec_wait(state, view, "ready")
            view.step = 4
        elif result.next == "game_over":
            view_new_exec_wait(state, view, "game_over")
            # go back to main menu
            view.step = 1


() view_run(object state, object view):
    name = view.name
    if view.name == "root":
        root(state, view)
    elif view.name == "intro":
        intro(state, view)
    elif view.name == "main_menu":
        main_menu(state, view)
    elif view.name == "player_ready":
        player_ready(state, view)
    elif view.name == "ready":
        ready(state, view)
    elif view.name == "playing":
        playing(state, view)


() idle(object state):
    now = time()
    delta = now - state.now
    print_fps(state)
    state.now = now
    state.delta = delta
    #print(["idle delta", delta])

    # run the intro
    state.views_next = []
    for view in state.views:
        if view.status == "exit":
            for parent in view.signal_on_exit:
                remove(parent.waiting_on, view)
                if length(parent.waiting_on) == 0:
                    parent.status = "run"
            continue
        if view.status == "run":
            if view.time_start == 0:
                view.time_start = now
            view_run(state, view)
        append(state.views_next, view)

    state.views = state.views_next

() print_fps(object state):
    frame_time = state.now - state.frame_start_time
    if frame_time > 1.0:
        fps = state.frames / frame_time
        print(["fps ", fps])
        state.frames = 0
        state.frame_start_time = state.now
    state.frames += 1

