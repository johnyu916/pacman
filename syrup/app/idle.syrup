from game_state import (, intro_run_start, intro_run_idle, main_menu_start, main_menu_idle, player_ready_start, player_ready_idle, ready_start, ready_idle, playing_start, playing_idle, dying_start, dying_idle, game_over_start, game_over_idle, won_start, won_idle, victory_dance_start, victory_dance_idle)
from intro import (intro_start, intro_idle)
from ai import ai_idle

() view_run(object state, object view, array prefix):
    path = []
    extend(path, prefix)
    append(path, view.name)
    views = view.views
    if length(views) > 0:
        view.views_next = []
        for view in views:
            view_run(state, view, path)
            if view.status == "run":
                append(views_next, view)
        view.views = views_next
    else:
        view_call(state, view, path):

() view_call(object state, object view, array path):
    zero = path[0]
    if zero == "intro":
        one = path[1]
        if one == "text":
            two = path[2]
            if two == "start":
                intro_text_start(state, view)


() idle(object state):
    now = time()
    delta = now - state.now
    print_fps(state)
    state.now = now
    state.delta = delta
    #print(["idle delta", delta])

    # run the intro
    for view in state.views:
        view_run(state, view)

    view = state.game.view
    view_name = view.name
    if view_name == "intro":
        if view.status == "start":
            intro_start(state)
        else:
            intro_idle(state)
    elif view_name == "intro_run":
        if view.status == "start":
            intro_run_start(state)
        else:
            intro_run_idle(state)
    elif view_name == "main_menu":
        if view.status == "start":
            main_menu_start(state)
        else:
            main_menu_idle(state)
    elif view_name == "player_ready":
        if view.status == "start":
            player_ready_start(state)
        else:
            player_ready_idle(state)
    elif view_name == "ready":
        if view.status == "start":
            ready_start(state)
        else:
            ready_idle(state)
        # display ready for 5 seconds then move to playing
    elif view_name == "playing":
        if view.status == "start":
            playing_start(state)
        else:
            playing_idle(state)
    elif view_name == "dying":
        if view.status == "start":
            dying_start(state)
        else:
            dying_idle(state)
    elif view_name == "game_over":
        if view.status == "start":
            game_over_start(state)
        else:
            game_over_idle(state)
    elif view_name == "won":
        if view.status == "start":
            won_start(state)
        else:
            won_idle(state)
    elif view_name == "victory_dance":
        if view.status == "start":
            victory_dance_start(state)
        else:
            victory_dance_idle(state)

() print_fps(object state):
    frame_time = state.now - state.frame_start_time
    if frame_time > 1.0:
        fps = state.frames / frame_time
        print(["fps ", fps])
        state.frames = 0
        state.frame_start_time = state.now
    state.frames += 1

