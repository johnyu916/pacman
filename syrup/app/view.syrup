from wafflecore.compute import (new_id)
(object value) get_view_old(object state, string name):
    for view in state.game.views:
        if view.name == name:
            value = view
            return
    value = null

(object view) view_new(object state, string name):
    view = {
        "id": new_id(state),
        "name": name,
        "status": "run",
        "signal_on_exit": [],
        "waiting_on": [],
        "time_start": 0,
        "step": 0
    }

(object view) view_new_exec(object state, string name):
    view = view_new(state, name)
    append(state.views_next, view)

(object child_view) view_new_exec_wait(object state, object view, string name):
    child_view = view_new(state, name)
    append(state.views_next, child_view)
    view_wait(view, child_view)

() view_wait(object view, number child_view):
    append(child_view.signal_on_exit, view)
    append(view.waiting_on, child_view)
    view.status = "wait"

() view_exit(object view, object result):
    view.status = "exit"
    view.result = result
