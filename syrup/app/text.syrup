from wafflecore.compute import (new_id, copy_vertices_color)
from wafflecore.thing import (thing_new, thing_blank)


(string color) string_color(array byte_color):
    color_list = []
    for i in range(4):
        append(color_list, integer_string(byte_color[i]))
    color = join(color_list, "_")

(bool yes) in_array(array things, string element):
    for thing in things:
        if thing == element:
            yes = true
            return

# color is 4 elements.
(object thing) get_text(object state, string text, array byte_color):
    children = []
    characters = state.characters
    x = 0.0
    for letter in text:
        if letter == "!":
            key = "exclamation"
        elif letter == " ":
            x += 8.0
            continue
        else:
            key = letter

        if in_array(keys(characters), key) == false:
            characters{key} = {}

        character = characters{key}
        text_color = string_color(byte_color)
        if in_array(keys(characters), text_color) == false:
            geometry = state.geometries{key}
            vertices = copy_vertices_color(geometry.vertices, byte_color)
            new_geometry = {
                "id": new_id(state),
                "vertices": array_float(vertices),
                "static": true
            }
            character{text_color} = new_geometry
        geometry = character{text_color}
        letter_thing = thing_new(new_id(state), "Letter", [x, 0.0, 0.0], [], [], geometry, null)
        append(children, letter_thing)
        x += 8.0
    thing = thing_blank(new_id(state), "String")
    thing.children = children
